{"version":3,"sources":["fbInstance.js","Components/AuthForm.js","Components/routes/Auth.js","Components/Mweet.js","Components/MweetFactory.js","Components/routes/Home.js","Components/Navigation.js","Components/routes/Profile.js","Components/Router.js","Components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialLoginClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Mweet","mWeetObj","isOwner","editing","setEditing","text","newMweet","setnewMweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","update","toggleEditing","autoFocus","src","faTrash","faPencilAlt","MweetFactory","userObj","mWeet","setMWeet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","mweetObj","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","document","getElementById","faTimes","Home","mWeets","setMWeets","useEffect","orderBy","onSnapshot","snapshot","mweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Router","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf78082b.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n/*\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MSEEAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n*/\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDU38Ar8ioBY3qscYk4D-poTMbflkBIKSQ\",\r\n  authDomain: \"maditter-9e9d0.firebaseapp.com\",\r\n  projectId: \"maditter-9e9d0\",\r\n  storageBucket: \"maditter-9e9d0.appspot.com\",\r\n  messagingSenderId: \"168707011353\",\r\n  appId: \"1:168707011353:web:dbe75844f0befdd76f8b88\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbInstance\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create Account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Log in\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport AuthForm from \"../AuthForm\";\r\nimport { authService, firebaseInstance } from \"../../fbInstance\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialLoginClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialLoginClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialLoginClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbInstance\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Mweet = ({ mWeetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newMweet, setnewMweet] = useState(mWeetObj.text);\r\n  const onDeleteClick = async (e) => {\r\n    const confirm = window.confirm(\"Are you sure to delete this mweek ?\");\r\n    if (confirm) {\r\n      await dbService.doc(`madweet/${mWeetObj.id}`).delete();\r\n      if (mWeetObj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(mWeetObj.attachmentUrl).delete(); // Storage Bucket에서 해당 file 지우기\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`madweet/${mWeetObj.id}`).update({\r\n      text: newMweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setnewMweet(value);\r\n    console.log(newMweet);\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your mweet\"\r\n                  value={newMweet}\r\n                  onChange={onChange}\r\n                  required\r\n                  autoFocus\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Mweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{mWeetObj.text}</h4>\r\n          {mWeetObj.attachmentUrl && <img src={mWeetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mweet;\r\n","import { dbService, storageService } from \"fbInstance\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst MweetFactory = ({ userObj }) => {\r\n  const [mWeet, setMWeet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    if (mWeet === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const mweetObj = {\r\n      text: mWeet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"madweet\").add(mweetObj);\r\n    setMWeet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setMWeet(value);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachmentClick = (e) => {\r\n    const AttachedFile = document.getElementById(\"onFileChange\");\r\n    AttachedFile.value = null;\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={mWeet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"mWeet\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MweetFactory;\r\n","import { dbService } from \"fbInstance\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Mweet from \"../Mweet\";\r\nimport MweetFactory from \"Components/MweetFactory\";\r\nconst Home = ({ userObj }) => {\r\n  const [mWeets, setMWeets] = useState([]);\r\n  /*\r\n  const getMadWeets = async () => {\r\n    const dbmadweets = await dbService.collection(\"madweet\").get();\r\n    dbmadweets.forEach((document) => {\r\n      const mweetObject = {\r\n        ...document.data(),\r\n        id: document.id,\r\n      };\r\n      setMWeets((prev) => [mweetObject, ...prev]);\r\n    });\r\n  };\r\n\r\n  // collection.get 방식\r\n  */\r\n  useEffect(() => {\r\n    // getMadWeets();\r\n    dbService\r\n      .collection(\"madweet\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const mweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setMWeets(mweetArray);\r\n      }); // collection.snapshot방식 :  CRUD 발생시 마다 snapshot => Realtime 구현 시\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <MweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {mWeets &&\r\n          mWeets.map((mWeet) => (\r\n            <Mweet\r\n              key={mWeet.id}\r\n              mWeetObj={mWeet}\r\n              isOwner={mWeet.creatorId === userObj.uid}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { authService } from \"fbInstance\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  /*\r\n  const getMyMweets = async () => {\r\n    const mweets = await dbService\r\n      .collection(\"madweet\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n\r\n    console.log(mweets.docs.map((doc) => doc.data()));\r\n  };\r\n */\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newDisplayName !== userObj.displayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n\r\n    setNewDisplayName(value);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"./routes/Auth\";\r\nimport Home from \"./routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"./routes/Profile\";\r\n\r\nexport default ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport Router from \"./Router\";\nimport { authService } from \"../fbInstance\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    //setUserObj(user); 형식으로 하면 re-rendering이 안되는 이유 ?\n    /* \n          React는 객체를 얕게 비교하여 상태를 업데이트할지 여부를 결정합니다.\n\n          1. React는 현재 상태와 새 상태를 비교합니다. 즉, 이 프로젝트의 객체입니다.\n          2. 객체를 비교할 때 객체의 속성을 속성별로 비교하지 않음\n          3. React는 속성이 아닌 참조를 비교하는 객체에 대해 얕은 비교를 수행합니다.\n\n          즉, 객체와 업데이트할 새 객체가 동일한 참조를 가리키면 React는 상태를 업데이트하지 않습니다.\n          따라서 이전의 객체와 다른 객체를 가리키는 완전히 새로운 객체가 필요할 것입니다.\n          \n          해결 방법 \n          1. user객체의 사본을 만들어 해결 방법\n          const user = authService.currentUser;\n          setUserObj(Object.assign({}, user));\n          // Object.assign은 첫번째 요소로 들어온 객체에 다음인자로 들어온 객체를 복사해준다.\n          \n          2. spread연산자를 활용한 해결 방법\n          setUserObj({...authService.currentUser});\n\n          3. 속성별로 obj에 저장하는 방법\n            setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n          \n          4. JSON.parse & JSON.stringify\n          5. Lodash & Ramda\n        */\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n      // 원하는 function을 얻기위한 중간 function\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <Router\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Maditter</footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}